The Celebrity Problem
A celebrity is a person who is known to all but does not know anyone at a party. A party is being organized by some people. 
A square matrix mat is used to represent people at the party such that if an element of row i and column j is set to 1 it means ith person 
knows jth person. You need to return the index of the celebrity in the party, if the celebrity does not exist, return -1.

Note: Follow 0-based indexing.




class Solution {
    // Function to find if there is a celebrity in the party or not.
    public int celebrity(int[][] mat) {
        int n = mat.length;
        Stack<Integer> stack = new Stack<>();

        // Step 1: Push all people to the stack
        for (int i = 0; i < n; i++) {
            stack.push(i);
        }

        // Step 2: Find a potential celebrity
        while (stack.size() > 1) {
            int A = stack.pop();
            int B = stack.pop();

            if (mat[A][B] == 1) {
                // A knows B, so A cannot be a celebrity
                stack.push(B);
            } else {
                // A does not know B, so B cannot be a celebrity
                stack.push(A);
            }
        }

        // If no potential celebrity
        if (stack.isEmpty()) {
            return -1;
        }

        // Step 3: Verify the potential celebrity
        int potentialCelebrity = stack.pop();

        for (int i = 0; i < n; i++) {
            if (i != potentialCelebrity) {
                // potentialCelebrity should not know anyone and everyone should know potentialCelebrity
                if (mat[potentialCelebrity][i] == 1 || mat[i][potentialCelebrity] == 0) {
                    return -1;
                }
            }
        }

        return potentialCelebrity;
    }

}
