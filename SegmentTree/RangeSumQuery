303. Range Sum Query - Immutable

Given an integer array nums, handle multiple queries of the following type:

Calculate the sum of the elements of nums between indices left and right inclusive where left <= right.
Implement the NumArray class:

NumArray(int[] nums) Initializes the object with the integer array nums.
int sumRange(int left, int right) Returns the sum of the elements of nums between indices left and right inclusive (i.e. nums[left] + nums[left + 1] + ... + nums[right]).




class NumArray {

     int total = 0;
    List<Integer> prefix = new ArrayList<>();
    public NumArray(int[] nums) {
        for(int n:nums){
            total+=n;
            prefix.add(total);
        }
    }
    public int sumRange(int left, int right) {
        int rightSum = prefix.get(right);
        int leftSum=0;
        if(left>0){
            leftSum = prefix.get(left-1);
        }
        return rightSum-leftSum;
    }
}

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray obj = new NumArray(nums);
 * int param_1 = obj.sumRange(left,right);
 */
