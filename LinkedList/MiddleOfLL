876. Middle of the Linked List

Given the head of a singly linked list, return the middle node of the linked list.

If there are two middle nodes, return the second middle node.



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
        if(head==null||head.next == null){
            return head;
        }
        ListNode p = head;
        int n = 0;
        while(p!=null){
            n++;
            p=p.next;
        }
        int mid = n / 2;
        
        p=head;
        n = 0;
        while(n!=mid){
            n++;
            p=p.next;
        }
        return p;
    }
}
